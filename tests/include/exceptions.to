do setNameSpace("exceptions.to")

do expectError(void () => { do undef() }, 34) // undefined variable
do expectError(void () => { make a = 0#1 }, 36) // Value is not an array
do expectError(void () => { make a = 0->1 }, 37) // Value is not an object
do expectError(void () => { make a = [1]#1 }, 38) // Index out of bounds
do expectError(void () => { make a = {1: 1, 1: 1} }, 40) // Duplicate key
do expectError(void () => { make a = {1: 1} - 2 }, 41) // Key not found
do expectError(void () => { make a = (int){} }, 42) // Cant convert to int
do expectError(void () => { make a = (float){} }, 43) // Cant convert to float
do expectError(void () => { make a = (object)1 }, 44) // Cant convert to object
do expectError(void () => { make a = (array)1 }, 45) // Cant convert to array
do expectError(void () => { make a = {} set a++ }, 46) // Invalid operation
do expectError(void () => { make a = {} / 2 }, 47) // Invalid binary operation
do expectError(void () => { make a = -{} }, 48) // Invalid unary operation
do expectError(void () => { make a = 2 / 0 }, 49) // Math domain error
do expectError(void () => { do 1() }, 50) // Not a function
do expectError(void () => { do void (a) => {}(1, 2) }, 51) // Wrong number of arguments
do expectError(void () => { const a = 0 set a = 1 }, 54) // Cant reassign const

include "0_assert.to"

make int integer = 0
make string str = ""
make array arr = []
make object obj = {}
make bool flag = false

set integer = 1
set str = "hello, world"
set arr = [1, 2, 3, 4, 5]
set obj = {"name": "John", "age": 30, "isStudent": false}
set flag = true

do assert (integer, 1)
do assert (str, "hello, world")
do assert (arr, [1, 2, 3, 4, 5])
do assert (obj, {"name": "John", "age": 30, "isStudent": false})
do assert (flag, true)

set integer += 1
set str += "!"
set arr += [6, 7, 8, 9, 10]
set obj->"age" += 1
set flag = !flag

do assert (integer, 2)
do assert (str, "hello, world!")
do assert (arr, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
do assert (obj->"age", 31)
do assert (flag, false)

// Edge cases
set integer = -1
set str = ""
set arr = []
set obj = {}
set flag = false

do assert (integer, -1)
do assert (str, "")
do assert (arr, [])
do assert (obj, {})
do assert (flag, false)

// Test with large numbers
set integer = 2147483647
do assert (integer, 2147483647)

set integer += 1
do assert (integer, -2147483648)

// Test with special characters in string
set str = "hello\nworld\t!"
do assert (str, "hello\nworld\t!")

// Test with nested arrays and objects
set arr = [[1, 2], [3, 4], [5, 6]]
do assert (arr, [[1, 2], [3, 4], [5, 6]])

set obj = {"nested": {"key": "value"}}
do assert (obj, {"nested": {"key": "value"}})